<?xml version="1.0"?>
<robot name="R2B2" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Configurable Measurements -->
    <xacro:property name="wheel_dia" value="0.064" />
    <xacro:property name="wheel_width" value="0.025" />
    <xacro:property name="wheel_x_from_ctr" value="0.095" />
    <xacro:property name="wheel_y_from_ctr" value="0.0875" />
    <xacro:property name="wheel_mass" value="0.040" />
    <xacro:property name="wheel_max_velocity" value="${pi * 2 * (220 / 60)}" />  <!-- 220 RPM -->

    <xacro:property name="base_x_len" value="0.250" />
    <xacro:property name="base_y_width" value="0.200" />
    <xacro:property name="base_plate_ht" value="0.006" />
    <xacro:property name="base_standoff_ht" value="0.060" />
    <xacro:property name="base_link_mass" value="2.125" />

    <xacro:property name="motor_mount_ht" value="0.0145" />
    <xacro:property name="sensor_arch_ht" value="0.062" />

    <!-- NUC8i5BEK 4.60" x 4.40" x 1.41" (117 mm x 112 mm x 36 mm) -->
    <xacro:property name="nuc_length" value="0.117" />
    <xacro:property name="nuc_width" value="0.112" />
    <xacro:property name="nuc_height" value="0.036" />

    <xacro:property name="camera_length" value="0.025" />
    <xacro:property name="camera_width" value="0.090" />
    <xacro:property name="camera_height" value="0.025" />
    <xacro:property name="camera_mass" value="0.069" />

    <xacro:property name="scanner_length" value="0.0968" />
    <xacro:property name="scanner_width" value="0.0703" />
    <xacro:property name="scanner_height" value="0.057" />
    <xacro:property name="scanner_sensor_height" value="0.048" />
    <xacro:property name="scanner_cylinder_height" value="0.0245" />
    <xacro:property name="scanner_cylinder_dia" value="0.070" />
    <xacro:property name="scanner_mass" value="0.170" />

    <xacro:property name="imu_length" value="0.02032" />
    <xacro:property name="imu_width" value="0.0127" />
    <xacro:property name="imu_height" value="0.003" />
    <xacro:property name="imu_standoff_height" value="0.008" />
    <xacro:property name="imu_mass" value="0.0007" />

    <!-- Derived Measurements -->
    <xacro:property name="base_box_ht" value="${base_plate_ht + base_standoff_ht + base_plate_ht}" />
    <xacro:property name="base_box_ht_from_floor" value="${wheel_dia/2 + motor_mount_ht}"/>
    <xacro:property name="base_box_top_ht" value="${base_box_ht_from_floor + base_box_ht}"/>
    <xacro:property name="base_cg_height" value="${base_box_ht_from_floor + (base_box_ht/2)}" />


    <!-- Macros -->
    <!-- https://en.wikipedia.org/wiki/List_of_moments_of_inertia#List_of_3D_inertia_tensors -->
    <xacro:macro name="box_inertial" params="mass length width height">
        <inertial>
            <mass value="${mass}" />
            <inertia 
                ixx="${1/12 * mass * (pow(height, 2) + pow(length, 2))}"
                ixy="0"
                ixz="0"
                iyy="${1/12 * mass * (pow(width, 2) + pow(height, 2))}"
                iyz="0"
                izz="${1/12 * mass * (pow(width, 2) + pow(length, 2))}"
            />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial" params="mass radius height">
        <inertial>
            <mass value="${mass}" />
            <inertia 
                ixx="${1/12 * mass * (3 * pow(radius, 2) + pow(height, 2))}"
                ixy="0"
                ixz="0"
                iyy="${1/12 * mass * (3 * pow(radius, 2) + pow(height, 2))}"
                iyz="0"
                izz="${1/12 * mass * pow(radius, 2)}"
            />
        </inertial>
    </xacro:macro>


    <!-- Links -->
    <link name="base_footprint"/>

    <link name="base_link">

        <visual name="frame_box">
            <!-- Top of frame is 120mm from origin -->
            <geometry>
                <box size="${base_x_len} ${base_y_width} ${base_box_ht}" />
            </geometry>
            <origin xyz="0.0 0.0 ${base_box_ht_from_floor + base_box_ht/2 - base_cg_height}"/>
            <material name="White" />
            <gazebo reference="frame_box">
                <material>Gazebo/White</material>
            </gazebo>
        </visual>

        <visual name="nuc">
            <!-- Top of NUC is 156mm from origin -->
            <geometry>
                <box size="${nuc_length} ${nuc_width} ${nuc_height}"/>
            </geometry>
            <origin xyz="-0.0335 0.0 ${base_box_top_ht + 0.036/2 - base_cg_height}"/>
            <material name="White" />
            <gazebo reference="nuc">
                <material>Gazebo/White</material>
            </gazebo>
        </visual>

        <visual name="raspberry_pi4">
            <geometry>
                <box size="0.070 0.094 0.030"/>
            </geometry>
            <origin xyz="0.077 0.0 ${base_box_top_ht + 0.030/2 - base_cg_height}"/>
            <material name="White" />
            <gazebo reference="raspberry_pi4">
                <material>Gazebo/White</material>
            </gazebo>
        </visual>

        <collision>
            <geometry>
                <!-- Scanner and camera collisions ar part of their links -->

                <!-- The base_link's collision box should be at the bottom of the motor mounts -->
                <box size="${base_x_len} ${base_y_width - (wheel_width * 2)} ${base_box_top_ht + sensor_arch_ht - wheel_dia/2}" />

                <!-- Translate the collision box's orgin up from the link's orgin by 1/2 of the difference in their sizes -->
                <!-- so that they are aligned at the top, and the gap is at the bottom. -->
                <!-- The difference in size is the wheel radius, so translate up 1/2 of the radius  -->
                <origin xyz="0 0 ${wheel_dia/4}" rpy="0 0 0"/>
            </geometry>
        </collision>

        <xacro:box_inertial 
            mass="${base_link_mass}" length="${base_x_len}" 
            width="${base_y_width}" height="${base_box_top_ht + sensor_arch_ht}" />
    </link>

    <link name="camera_link">
        <visual>
            <geometry>
                <box size="${camera_length} ${camera_width} ${camera_height}"/>
            </geometry>
            <material name="Sky Blue" />
            <gazebo reference="camera_link">
                <material>Gazebo/Blue</material>
            </gazebo>
        </visual>

        <collision>
            <geometry>
                <box size="${camera_length} ${camera_width} ${camera_height}"/>
            </geometry>
        </collision>

        <xacro:box_inertial 
            mass="${camera_mass}" length="${camera_length}" 
            width="${camera_width}" height="${camera_height}" />

     </link>

    <link name="imu_link">
        <visual>
            <geometry>
                <box size="${imu_length} ${imu_width} ${imu_height}" />
            </geometry>
            <material name="PCB Green" />
            <gazebo reference="imu_link">
                <material>Gazebo/Green</material>
            </gazebo>
        </visual>

        <collision>
            <geometry>
                <box size="${imu_length} ${imu_width} ${imu_height}" />
            </geometry>
        </collision>

        <xacro:box_inertial 
            mass="${imu_mass}" length="${imu_length}" 
            width="${imu_width}" height="${imu_height}" />
    </link> 

    <link name="scanner_link">
        <!-- Note Scanner link's origin needs to be where the receive sensor is located, near the top -->
        <visual name="scanner_cylinder_visual">
            <geometry>
                <cylinder radius="${scanner_cylinder_dia/2}" length="${scanner_cylinder_height}"/>
            </geometry>
            <!--
                Rotating cylinder is 24.5mm tall
                Receive sensor origin is 15.5mm above bottom of cylinder
                    i.e. scanner_sensor_height - (scanner_height - scanner_cylinder_height)
                So the cylinder visual should be dropped by the difference
                    y = (24.5/2) - 15.5 = -3.25mm
            -->
            <origin xyz="0 0 ${scanner_cylinder_height/2 - (scanner_sensor_height - (scanner_height - scanner_cylinder_height))}"/>
            <material name="Black" />
            <gazebo reference="scanner_cylinder_visual">
                <material>Gazebo/Orange</material>
            </gazebo>
        </visual>
        <visual name="scanner_box_visual">
            <geometry>
                <box size="${scanner_length} ${scanner_width} ${scanner_height - scanner_cylinder_height}"/>
            </geometry>
            <!-- <origin xyz="0.015 0.0 -0.033"/> -->
            <!--
                Calculate the visual origin of the base box which sits under the cylinder.

                X-
                Align the front edge. So just translate by the difference on one side
                Which = (Xscanner - Xcylinder)/2 since the difference is on each side

                Y- No change since the scanner is in the center of base

                Z- 
                This is the simplified expression of the longer calculation
                -(Hbox/2 + (Hcylinder - (Hscanner - Hsensor)))
                Where Hbox = Hscanner - Hcylinder
            -->
            <origin xyz="${-(scanner_length - scanner_cylinder_dia)/2} 0.0 ${ -(scanner_cylinder_height - scanner_height + (2 * scanner_sensor_height)) / 2 }" />
            <material name="Black" />
            <gazebo reference="scanner_box_visual">
                <material>Gazebo/Black</material>
            </gazebo>
        </visual>

        <collision>
            <!--
            The collision box needs to be dropped from the sensor origin,
            since the sensor origin is near the top of the scanner box.
            -->
            <origin xyz="0.0 0.0 ${scanner_height/2 - (scanner_height - scanner_sensor_height)}"/>
            <geometry>
                <box size="${scanner_length} ${scanner_width} ${scanner_height}"/>
            </geometry>                
        </collision>

        <xacro:box_inertial 
            mass="${scanner_mass}" length="${scanner_length}" 
            width="${scanner_width}" height="${scanner_height}" />                
    </link>


    <!-- Wheels -->
    <link name="front_left_wheel_link">
        <visual name="front_left_wheel">
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
            <material name="Black" />
            <gazebo reference="front_left_wheel">
                <material>Gazebo/Black</material>
            </gazebo>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertial mass="${wheel_mass}" radius="${wheel_dia/2}" height="${wheel_width}"/>
    </link>

    <link name="front_right_wheel_link">
        <visual name="front_right_wheel">
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
            <material name="Black" />
            <gazebo reference="front_right_wheel">
                <material>Gazebo/Black</material>
            </gazebo>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertial mass="${wheel_mass}" radius="${wheel_dia/2}" height="${wheel_width}"/>
    </link>

    <link name="rear_left_wheel_link">
        <visual name="rear_left_wheel">
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
            <material name="Black" />
            <gazebo reference="rear_left_wheel">
                <material>Gazebo/Black</material>
            </gazebo>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertial mass="${wheel_mass}" radius="${wheel_dia/2}" height="${wheel_width}"/>
    </link>

    <link name="rear_right_wheel_link">
        <visual name="rear_right_wheel">
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
            <material name="Black" />
            <gazebo reference="rear_right_wheel">
                <material>Gazebo/Black</material>
            </gazebo>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_dia/2}" length="${wheel_width}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertial mass="${wheel_mass}" radius="${wheel_dia/2}" height="${wheel_width}"/>
    </link>


    <!-- Joints -->
    <joint name="base_link_joint" type="fixed">
        <origin xyz="0 0 ${base_cg_height}" rpy="0 0 0" />
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>

    <joint name="camera_link_joint" type="fixed">
        <origin xyz="0.143 0.0 ${0.185 - base_cg_height}" rpy="0.0 0.3491 0.0"/>
        <parent link="base_link"/>
        <child link="camera_link"/>
    </joint>

    <joint name="imu_link_joint" type="fixed">
        <origin xyz="0.040 -0.040 ${base_box_top_ht + sensor_arch_ht + imu_standoff_height - base_cg_height}" 
                rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="imu_link"/>
    </joint>

    <joint name="scanner_link_joint" type="fixed">
        <origin xyz="0.080 0 ${0.228 - base_cg_height}" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="scanner_link"/>
    </joint>

    <joint name="front_left_wheel_joint" type="continuous">
        <axis xyz="0 0 1"/>
        <origin xyz="${wheel_x_from_ctr} ${wheel_y_from_ctr} ${wheel_dia/2 - base_cg_height}" rpy="-${pi/2} 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="front_left_wheel_link"/>
    </joint>

    <joint name="front_right_wheel_joint" type="continuous">
        <axis xyz="0 0 1"/>
        <origin xyz="${wheel_x_from_ctr} -${wheel_y_from_ctr} ${wheel_dia/2 - base_cg_height}" rpy="-${pi/2} 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="front_right_wheel_link"/>
    </joint>

    <joint name="rear_left_wheel_joint" type="continuous">
        <axis xyz="0 0 1"/>
        <origin xyz="-${wheel_x_from_ctr} ${wheel_y_from_ctr} ${wheel_dia/2 - base_cg_height}" rpy="-${pi/2} 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="rear_left_wheel_link"/>
    </joint>

    <joint name="rear_right_wheel_joint" type="continuous">
        <axis xyz="0 0 1"/>
        <origin xyz="-${wheel_x_from_ctr} -${wheel_y_from_ctr} ${wheel_dia/2 - base_cg_height}" rpy="-${pi/2} 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="rear_right_wheel_link"/>
    </joint>


    <!-- Materials -->
    <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
    </material>

    <material name="Sky Blue">
        <color rgba="0.125 0.525 0.90 1.0"/>
    </material>

    <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
    </material>

    <material name="PCB Green">
        <color rgba="0.0 0.468 0.0 1.0"/>
    </material>

    <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
    </material>


    <gazebo reference="scanner_link_joint">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="camera_link_joint">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="imu_link_joint">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="scanner_link">
        <sensor name='rplidar_a1' type='gpu_lidar'>
            <!-- 10Hz @ 4000 points = 400 samples and 10 update rate -->
            <pose relative_to="scanner_link">0 0 0 0 0 0</pose>
            <topic>scan</topic>
            <update_rate>5.5</update_rate>
            <lidar>
                <scan>
                    <horizontal>
                        <samples>725</samples>
                        <resolution>1</resolution>
                        <min_angle>-${pi}</min_angle>
                        <max_angle>${pi}</max_angle>
                    </horizontal>
                    <vertical>
                        <!-- <samples>16</samples>
                        <resolution>1</resolution>
                        <min_angle>-0.261799</min_angle>
                        <max_angle>0.261799</max_angle> -->
                        <samples>16</samples>
                        <resolution>1</resolution>
                        <min_angle>-0.0261799</min_angle>
                        <max_angle>0.0261799</max_angle>
                    </vertical>
                    </scan>
                <range>
                    <min>0.15</min>
                    <max>12.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>guassian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </lidar>
            <always_on>true</always_on>
            <visualize>true</visualize>
            <ignition_frame_id>scanner_link</ignition_frame_id>
        </sensor>        
    </gazebo>

    <gazebo reference="camera_link">
        <sensor name="rgbd_camera" type="rgbd_camera">
            <topic>rgbd_camera</topic>
            <update_rate>30</update_rate>
            <camera>
                <horizontal_fov>1.2133529</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <distortion>
                    <k1>0</k1>
                    <k2>0</k2>
                    <k3>0</k3>
                    <p1>0</p1>
                    <p2>0</p2>
                    <center>0.5 0.5</center>
                </distortion>
                <lens>
                    <type>sterographic</type>
                    <scale_to_hfov>true</scale_to_hfov>
                    <intrinsics>
                        <fx>461.115600585938</fx>
                        <fy>461.144226074219</fy>
                        <cx>319.159820556641</cx>
                        <cy>181.155624389648</cy>
                        <s>0</s>
                    </intrinsics>
                </lens>
                <clip>
                    <near>0.1</near>
                    <far>50</far>
                </clip>
            </camera>
            <depth_camera>
                <output>depths</output>
                <clip>
                    <near>0.3</near>
                    <far>3.0</far>
                </clip>
            </depth_camera>
            <always_on>1</always_on>
            <visualize>true</visualize>
            <enable_metrics>true</enable_metrics>
            <ignition_frame_id>camera_link</ignition_frame_id>
          </sensor>

        <!-- <sensor name="realsense_D435_rgb" type="camera">
            <topic>realsense/color/image_raw</topic>
            <update_rate>30</update_rate>
            <camera>
                <horizontal_fov>1.2133529</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>360</height>
                    <format>R8G8B8</format>
                </image>
                <distortion>
                    <k1>0</k1>
                    <k2>0</k2>
                    <k3>0</k3>
                    <p1>0</p1>
                    <p2>0</p2>
                    <center>0.5 0.5</center>
                </distortion>
                <lens>
                    <type>sterographic</type>
                    <scale_to_hfov>true</scale_to_hfov>
                    <intrinsics>
                        <fx>461.115600585938</fx>
                        <fy>461.144226074219</fy>
                        <cx>319.159820556641</cx>
                        <cy>181.155624389648</cy>
                        <s>0</s>
                    </intrinsics>
                </lens>
            </camera>
            <always_on>1</always_on>
            <visualize>true</visualize>
            <ignition_frame_id>camera_link</ignition_frame_id>
        </sensor> -->


        <!-- Intrinsic of "Color" / 640x360 / {YUYV/RGB8/BGR8/RGBA8/BGRA8/Y16}
        Width:      	640
        Height:     	360
        PPX:        	319.159820556641
        PPY:        	181.155624389648
        Fx:         	461.115600585938
        Fy:         	461.144226074219
        Distortion: 	Inverse Brown Conrady
        Coeffs:     	0  	0  	0  	0  	0  
        FOV (deg):  	69.52 x 42.64 -->
      

        <!-- <sensor name="realsense_D435_depth" type="depth_camera">
            <topic>realsense/depth/image_rect_raw</topic>
            <update_rate>6</update_rate>
            <camera>
                <horizontal_fov>1.5610225</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>360</height>
                    <format>R_FLOAT32</format>
                </image>
                <distortion>
                    <k1>0</k1>
                    <k2>0</k2>
                    <k3>0</k3>
                    <p1>0</p1>
                    <p2>0</p2>
                    <center>0.5 0.5</center>
                </distortion>
                <lens>
                    <type>sterographic</type>
                    <scale_to_hfov>true</scale_to_hfov>
                    <intrinsics>
                        <fx>323.143859863281</fx>
                        <fy>323.143859863281</fy>
                        <cx>317.321014404297</cx>
                        <cy>177.92724609375</cy>
                        <s>0</s>
                    </intrinsics>
                </lens>

            </camera>
            <depth_camera>
                <output>depths</output>
                <clip>
                <near>0.3</near>
                <far>3.0</far>
              </clip>
            </depth_camera>
            <always_on>1</always_on>
            <visualize>true</visualize>
            <ignition_frame_id>camera_link</ignition_frame_id>
        </sensor> -->

        <!-- Intrinsic of "Depth" / 640x360 / {Z16}
        Width:      	640
        Height:     	360
        PPX:        	317.321014404297
        PPY:        	177.92724609375
        Fx:         	323.143859863281
        Fy:         	323.143859863281
        Distortion: 	Brown Conrady
        Coeffs:     	0  	0  	0  	0  	0  
        FOV (deg):  	89.44 x 58.24 -->


    </gazebo>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <always_on>1</always_on>
            <imu>
                <angular_velocity>
                  <x>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                      <bias_mean>0.0000075</bias_mean>
                      <bias_stddev>0.0000008</bias_stddev>
                    </noise>
                  </x>
                  <y>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                      <bias_mean>0.0000075</bias_mean>
                      <bias_stddev>0.0000008</bias_stddev>
                    </noise>
                  </y>
                  <z>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                      <bias_mean>0.0000075</bias_mean>
                      <bias_stddev>0.0000008</bias_stddev>
                    </noise>
                  </z>
                </angular_velocity>
                <linear_acceleration>
                  <x>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                      <bias_mean>0.1</bias_mean>
                      <bias_stddev>0.001</bias_stddev>
                    </noise>
                  </x>
                  <y>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                      <bias_mean>0.1</bias_mean>
                      <bias_stddev>0.001</bias_stddev>
                    </noise>
                  </y>
                  <z>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                      <bias_mean>0.1</bias_mean>
                      <bias_stddev>0.001</bias_stddev>
                    </noise>
                  </z>
                </linear_acceleration>
              </imu>            
            <update_rate>10</update_rate>
            <visualize>true</visualize>
            <topic>imu</topic>
            <ignition_frame_id>imu_link</ignition_frame_id>
        </sensor>
    </gazebo>

</robot>
